name: Example Pipeline
on:
  push:
    branches:
      - master

jobs:
  publish_app:
    name: Publish application to expo
    runs-on: ubuntu-latest
    if: success() && github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v2

      - name: Setup expo cli
        uses: expo/expo-github-action@v5
        with:
          expo-version: 3.x
          expo-username: ${{ secrets.EXPO_USERNAME }}
          expo-password: ${{ secrets.EXPO_PASSWORD }}

      - name: Get yarn global bin directory
        id: yarn-bin
        run: echo "::set-output name=dir::$(yarn global bin)"

      - name: Installing expo-cli
        run: yarn global add expo-cli

      - name: Cache yarn
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: ${{ runner.OS }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-yarn-
            ${{ runner.OS }}-

      - name: Install other Dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: |
          yarn install

      - name: Publish to expo
        run: expo publish

  build_android_apk:
    if: success() && github.event_name == 'push' && github.ref == 'refs/heads/master'
    name: Build Android apk
    needs: [publish_app]
    runs-on: ubuntu-latest
    env:
      EXPO_SDK_VERSION: 37.0.0
      TURTLE_VERSION: 0.15.0
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: |
          yarn install

      - name: Get yarn global bin directory
        id: yarn-bin
        run: echo "::set-output name=dir::$(yarn global bin)"

      - name: Installing turtle-cli
        run: yarn global add turtle-cli@$TURTLE_VERSION

      - name: Build android apk
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          ANDROID_KEYSTORE_ALIAS: ${{ secrets.ANDROID_KEYSTORE_ALIAS }}
          EXPO_USERNAME: ${{ secrets.EXPO_USERNAME }}
          EXPO_PASSWORD: ${{ secrets.EXPO_PASSWORD }}
          EXPO_ANDROID_KEYSTORE_PASSWORD: ${{ secrets.EXPO_ANDROID_KEYSTORE_PASSWORD }}
          EXPO_ANDROID_KEY_PASSWORD: ${{ secrets.EXPO_ANDROID_KEY_PASSWORD }}
        run: |
          echo $ANDROID_KEYSTORE > ./expo-project.jks.base64
          base64 --decode ./expo-project.jks.base64 > expo-project.jks
          ${{ steps.yarn-bin.outputs.dir }}/turtle build:android \
          --keystore-path ./expo-project.jks \
          --keystore-alias ${{ secrets.ANDROID_KEYSTORE_ALIAS }} \
          --type apk \
          --output ./expo-project.apk

      - uses: actions/upload-artifact@v2
        with:
          name: expo-project-apk
          path: ./expo-project.apk

  build_ios_app:
    if: success() && github.event_name == 'push' && github.ref == 'refs/heads/master'
    name: Build iOS ipa
    needs: [publish_app]
    runs-on: macos-latest
    env:
      EXPO_SDK_VERSION: 37.0.0
      TURTLE_VERSION: 0.15.0
      HOMEBREW_NO_AUTO_UPDATE: 1

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: |
          yarn install

      - name: Get yarn global bin directory
        id: yarn-bin
        run: echo "::set-output name=dir::$(yarn global bin)"

      - name: Installing turtle-cli
        run: yarn global add turtle-cli@$TURTLE_VERSION

      - name: Build iOS ipa
        env:
          EXPO_APPLE_TEAM_ID: ${{ secrets.EXPO_APPLE_TEAM_ID }}
          EXPO_IOS_DIST_P12_PASSWORD: ${{ secrets.EXPO_IOS_DIST_P12_PASSWORD }}
          EXPO_PASSWORD: ${{ secrets.EXPO_PASSWORD }}
          EXPO_USERNAME: ${{ secrets.EXPO_USERNAME }}
          EXPO_IOS_DIST_P12_BASE64: ${{ secrets.EXPO_IOS_DIST_P12_BASE64 }}
          IOS_PROVISIONING_PROFILE_BASE64: ${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}
        run: |
          echo $EXPO_IOS_DIST_P12_BASE64 > expo-project_dist.p12.base64
          base64 --decode expo-project_dist.p12.base64 > expo-project_dist.p12
          echo $EXPO_IOS_PROVISIONING_PROFILE_BASE64 > expo-project.mobileprovision.base64
          base64 --decode expo-project.mobileprovision.base64 > expo-project.mobileprovision
          ${{ steps.yarn-bin.outputs.dir }}/turtle build:ios \
              --team-id $EXPO_APPLE_TEAM_ID \
              --dist-p12-path ./expo-project_dist.p12 \
              --provisioning-profile-path ./expo-project.mobileprovision \
              -o ./expo-project.ipa

      - uses: actions/upload-artifact@v2
        with:
          name: expo-project-ipa
          path: ./expo-project.ipa
